'scopeName': 'source.openedge'
'name': 'OpenEdge'
'fileTypes': [
    'p'
    'w'
    'cls'
    'i'
]
'patterns': [
    {
        #'include': '#ifStatements'
    }
    {
        'include': '#oeFunctions'
    }
    { 'include': '#functionsMethods' }
    {
        'include': '#strings'
    }
    {
        'include': '#forStatement'
    }
    {
        'include': '#doStatement'
    }
    {
        'include': '#defineStatements'
    }
    {
        'include': '#preProcVar'
    }
    {
        'include': '#comments'
    }
    {
        'include': '#oeConstants'
    }
    {
        'include': '#includeFile'
    }
    {
        'include': '#oeFlowControl'
    }
    {
        'include': '#msgBox'
    }
    {
        'begin': '^&(?i:analyze-suspend|analyze-resume)'
        'end': '$'
        'name': 'meta.analyze-suspend'
        'patterns': [
            {
                'match': '(?i:(?<=_function\\s))[\\w\\d-]*'
                'name': 'entity.name.function.oe'
            }
            {
                'match': '(?i:(?<=_function-forward\\s))[\\w\\d-]*'
                'name': 'entity.name.function.oe'
            }
        ]
    }
    {
        'begin': '^\\s*(?i:(class\\s+(?:public\\s+|private\\s+|protected\\s+|abstract\\s+|static\\s+)*)(\\w[\\w\\d-]*)(?:\\s+(inherits|implements)\\s+(\\w[\\w\\d-]*))?)'
        'beginCaptures':
            '1':
                'name': 'keyword.other.oe'
            '2':
                'name': 'entity.name.type.class.oe'
            '3':
                'name': 'keyword.other.oe'
            '4':
                'name': 'entity.other.inherited-class.oe'
        'end': '[\.:]$'
        'name': 'meta.class.oe'
    }
]
'repository':
    'functionsMethods':
        'patterns': [
            {
                'begin': '[\\w\\d-]+\\s*\\('
                'beginCaptures':
                    '0':
                        'name': 'entity.name.function.oe'
                'end': '\\)'
                'endCaptures':
                    '0':
                        'name': 'entity.name.function.oe'
                'name': 'meta.function.oe'
                'patterns': [
                    { 'include': '#parameterPatterns' }
                ]
            }
        ]
    'msgBox':
        'patterns': [
            {
                'begin': 'message'
                'end': '\\.\\b'
                'name': 'keyword.other.message.oe'
                'patterns': [
                    { 'include': '#parameterPatterns' }
                    { 'include': '#varNameAndType'}
                ]
            }
        ]
    'oeFlowControl':
        'patterns': [
            {
                'match': '(?<=\\W)(?i:return|next)(?=\\W)'
                'name': 'keyword.control.oe'
            }
        ]
    'includeFile':
        'patterns': [
            {
                'begin': '\{(?!&)'
                'end': '\}'
                'name': 'string.interpolated.include.oe'
            }
        ]
    'defineStatements':
        'patterns': [
            {
                'begin': '^\\s*(?i:(def(?:ine)))\\s*'
                'end': '\\.\\s'
                'name': 'meta.keyword.other.define.oe'
                'patterns': [
                    {
                        'include': '#strings'
                    }
                    {
                        'include': '#numbers'
                    }
                    {
                        'include': '#modifiers'
                    }
                    {
                        'include': '#oeConstants'
                    }
                    { 'include': '#varNameAndType'}
                ]
            }
        ]
    'varNameAndType':
        'patterns': [
            {
                'match': '\\b([\\w\\d_\-]*)\\s+(?i:(as))\\s+([\\w\\d_\\-]*(?:\\.\\w+)*)'
                'captures':
                    '1':
                        'name': 'variable.other.oe'
                    '3':
                        'name': 'storage.type.oe'
            }
        ]
    'doStatement':
        'patterns': [
            {
                'begin': '(?<=\\s)(?i:do)\\b'
                'end': '[\\.:](?=\\s*$)'
                'name': 'keyword.other.doblock.oe'
                'patterns': [
                    {
                        'include': '#parameterPatterns'
                    }
                ]
            }
        ]
    'ifStatements':
        'patterns': [
            {
                'begin': '\\b(?i:if)\\b'
                'beginCaptures':
                    '0':
                        'name': 'keyword.other.if.oe'
                'end': '\\b(?i:else)\\b'
                'endCaptures':
                    '0':
                        'name': 'keyword.other.else.oe'
                'patterns': [
                    {
                        'include': '#parameterPatterns'
                    }
                    {
                        'match': '\\b(?i:then)\\b'
                        'name': 'keyword.other.then.oe'
                    }
                ]
            }
            {
                'begin': '\\b(?i:if)\\b'
                'beginCaptures':
                    '0':
                        'name': 'keyword.other.if.oe'
                'end': '\\b(?i:then)\\b'
                'endCaptures':
                    '0':
                        'name': 'keyword.other.then.oe'
                'patterns': [
                    {
                        'include': '#parameterPatterns'
                    }
                ]
            }
        ]
    'forStatement':
        'patterns': [
            {
                'begin': '^(?:\\s*\\b)(?i:(for))(?:[^\\w-])'
                'end': '[\\.:]\\s*\$'
                'name': 'keyword.other.for.oe'
                'patterns': [
                    {
                        'include': '#parameterPatterns'
                    }
                    {
                        'match': '\\b(?i:each|first|last)\\s*([\\w-]*)\\b'
                        'captures':
                            '1':
                                'name': 'storage.name.table.oe'
                    }
                    {
                        'match': '\\b([\\w\\d-]+\\.[\\w\\d-]+)\\b'
                        'name': 'storage.name.table.field.oe'
                    }
                ]
            }
        ]
    'modifiers':
        'patterns': [
            {
                'match': '\\b(static|private|public|protected|global|shared|new|final|abstract)\\b'
                'name': 'storage.modifier.oe'
            }
        ]
    'numbers':
        'patterns': [
            {
                'match': '(?<=\\W)\\.?[\\d\\.]*\\d\\b'
                'name': 'constant.numeric.oe'
            }
        ]
    'oeConstants':
        'patterns': [
            {
                'match': '(?<=[^\\w-])(?i:(yes|no|true|false|\\?))(?=[^\\w-])'
                'captures':
                    '1':
                        'name': 'constant.language.oe'
            }
        ]
    'oeFunctions':
        'patterns': [
            {
                'begin': '\\b((?i:(int(eger)?|log(ical)?|string|lookup|entry|chr|trim|substitute|mtime|date|replace|substring|index|num-entries|dec(imal)?))\\()'
                'end': '\\)(?=\\W)'
                'beginCaptures':
                    '1':
                        'name': 'support.function.oe'
                'endCaptures':
                    '0':
                        'name': 'support.function.oe'
                'patterns': [
                    { 'include': '#parameterPatterns' }
                ]
            }
        ]
    'mathOperators':
        'patterns': [
            {
                'match': '(?<=\\s)[=+\\-\\*\\/](?=\\s)'
                'name': 'keyword.operator.math.oe'
            }
        ]
    'parameterPatterns':
        'patterns': [
            { 'include': '#comments' }
            { 'include': '#oeConstants' }
            { 'include': '#numbers' }
            { 'include': '#strings' }
            { 'include': '#preProcVar' }
            { 'include': '#oeFunctions' }
            { 'include': '#ifStatements' }
            { 'include': '#mathOperators' }
            { 'include': '#functionsMethods' }
            {
                'match': '(?i:input-output|input|output)'
                'name': 'keyword.other.oe'
            }
        ]
    'preProcVar':
        'patterns': [
            {
                'match': '\{&[\\w_\-]+\}'
                'name': 'constant.other.preprocessor.oe'
            }
            {
                'begin': '^\\s*(&(?i:(?:scoped|global)-define))\\s+([\\w\\d-]*)'
                'beginCaptures':
                    '1':
                        'name': 'keyword.other.preprocessordefine.oe'
                    '2':
                        'name': 'constant.other.preprocessor.oe'
                'end': '$'
                'name': 'meta.preprocessor.define.oe'
                'patterns': [
                    { 'include': '#numbers' }
                    { 'include': '#strings' }
                ]
            }
        ]
    'strings':
      'patterns': [
        {
          'begin': '[\']'
          'end': '[\']'
          'name': 'string.quoted.oe'
          'patterns': [
            {
              'match': '\~.'
              'name': 'constant.character.escape.oe'
            }
            {
                'include': '#preProcVar'
            }
          ]
        }
        {
          'begin': '["]'
          'end': '["]'
          'name': 'string.quoted.oe'
          'patterns': [
            {
              'match': '\~.'
              'name': 'constant.character.escape.oe'
            }
            {
                'include': '#preProcVar'
            }
          ]
        }
      ]
    'comments':
        'patterns': [
            {
                'begin': '/\\*'
                'end': '\\*/'
                'name': 'comment.block.oe'
            }
        ]
