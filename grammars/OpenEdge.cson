'scopeName': 'source.openedge'
'name': 'OpenEdge'
'fileTypes': [
    'p'
    'w'
    'cls'
    'i'
]
'patterns': [
    { 'include': '#codeBlock' }
    {
        'begin': '^\\s*(?i:(class\\s+(?:public\\s+|private\\s+|protected\\s+|abstract\\s+|static\\s+)*)(\\w[\\w\\d-]*)(?:\\s+(inherits|implements)\\s+(\\w[\\w\\d-]*))?)'
        'beginCaptures':
            '1':
                'name': 'keyword.other.oe'
            '2':
                'name': 'entity.name.type.class.oe'
            '3':
                'name': 'keyword.other.oe'
            '4':
                'name': 'entity.other.inherited-class.oe'
        'end': '[\.:]$'
        'name': 'meta.class.oe'
    }
]
'repository':
    'codeBlock':
        'patterns': [
            {
                #'include': '#ifStatements'
            }
            { 'include': '#oeFunctions' }
            { 'include': '#functionsMethods' }
            { 'include': '#strings' }
            { 'include': '#forStatement' }
            { 'include': '#doStatement' }
            { 'include': '#defineStatements' }
            { 'include': '#preProcVar' }
            { 'include': '#comments' }
            { 'include': '#oeConstants' }
            { 'include': '#includeFile' }
            { 'include': '#oeFlowControl' }
            { 'include': '#msgBox' }
            {
                'begin': '&(?i:if)'
                'beginCaptures':
                    '0':
                        'name': 'keyword.other.preprocif.oe'
                'end': '&(?:endif)'
                'endCaptures':
                    '0':
                        'name': 'keyword.other.preprocif.oe'
                'name': 'meta.preprocessor.if'
                'patterns': [
                    { 'include': '#parameterPatterns'}
                    { 'include': '#codeBlock'}
                    {
                        'match': '(?i:&then|&else|&elseif)'
                        'name': 'keyword.other.preprocif.oe'
                    }
                ]
            }
            {
                'begin': '^&(?i:analyze-suspend)'
                'beginCaptures':
                    '0':
                        'name': 'keyword.other.preprocessor.oe'
                'end': '^&(?i:analyze-resume)'
                'endCaptures':
                    '0':
                        'name': 'keyword.other.preprocessor.oe'
                'name': 'meta.analyze-suspend'
                'patterns': [
                    { 'include': '#codeBlock' }
                ]
            }
        ]
    'preProcIf':
        'patterns': [
            {
                'begin': '&(?i:if)'
                'beginCaptures':
                    '0':
                        'name': 'keyword.other.preprocif.oe'
                'end': '&(?:endif)'
                'endCaptures':
                    '0':
                        'name': 'keyword.other.preprocif.oe'
                'name': 'meta.preprocessor.if'
                'patterns': [
                    { 'include': '#parameterPatterns'}
                    {
                        'match': '(?i:&then|&else|&elseif)'
                        'name': 'keyword.other.preprocif.oe'
                    }
                ]
            }
        ]
    'functionsMethods':
        'patterns': [
            {
                'begin': '[\\w\\d-]+\\s*\\('
                'beginCaptures':
                    '0':
                        'name': 'entity.name.function.oe'
                'end': '\\)'
                'endCaptures':
                    '0':
                        'name': 'entity.name.function.oe'
                'name': 'meta.function.oe'
                'patterns': [
                    { 'include': '#parameterPatterns' }
                ]
            }
        ]
    'msgBox':
        'patterns': [
            {
                'begin': 'message'
                'end': '\\.\\b'
                'name': 'keyword.other.message.oe'
                'patterns': [
                    { 'include': '#parameterPatterns' }
                    { 'include': '#varNameAndType'}
                ]
            }
        ]
    'oeFlowControl':
        'patterns': [
            {
                'match': '(?<=\\W)(?i:return|next)(?=\\W)'
                'name': 'keyword.control.oe'
            }
        ]
    'includeFile':
        'patterns': [
            {
                'begin': '\{(?!&)'
                'end': '\}'
                'name': 'string.interpolated.include.oe'
            }
        ]
    'defineStatements':
        'patterns': [
            { #variable
                'begin': '^\\s*(?i:def(?:ine)?)(?=[^\\w-].*(?i:var(iable)?))'
                'beginCaptures':
                    '0':
                        'name': 'keyword.other.define.oe'
                'end': '\\.\\s'
                'name': 'meta.define.oe'
                'patterns': [
                    {
                        'match': '(?i:((?:static\\s+|public\\s+|private\\s+|protected\\s+|new\\s+|global\\s+|shared\\s+)*)(var(?:iable)?))'
                        'captures':
                            '1':
                                'name': 'storage.modifier.oe'
                            '2':
                                'name': 'keyword.other.oe'
                    }
                    { 'include': '#varNameAndType'}
                    {
                        'match': '(?<=[^\\w-])(?i:no-undo|init(?:ial)?|drop-target|(?:not\\s)?case-sensitive|bgcolor|column-label|context-help-id|dcolor|decimals|font|fgcolor|format|label|mouse-pointer|pfcolor)(?=[^\\w-])'
                        'name': 'keyword.other.define.oe'
                    }
                    { 'include': '#viewasphrase' }
                    { 'include': '#strings' }
                    { 'include': '#numbers' }
                    { 'include': '#oeConstants' }
                ]
            }
            { #parameter
                'begin': '^\\s*(?i:def(?:ine)?)([^\\w-].*(?i:(param(eter)?)))'
                'beginCaptures':
                    '0':
                        'name': 'keyword.other.define.oe'
                'end': '\\.\\s'
                'name': 'meta.define.oe'
                'patterns': [
                    { #variable
                        'match': '\\b([\\w\\d_-]+)\\s+(?i:(as(?:\\s+(?:handle\\s+to|class))?|like))\\s+([\\w\\d_-]+(?:\\.\\w+)*)(?i:(?:\\s+(extent)(\\s+\\d+)?)?)'
                        'captures':
                            '1':
                                'name': 'variable.other.oe'
                            '2':
                                'name': 'keyword.other.oe'
                            '3':
                                'name': 'storage.type.oe'
                            '4':
                                'name': 'keyword.other.oe'
                            '5':
                                'name': 'constant.numeric.oe'
                    }
                    { #buffer
                        'match': '\\b(?i:(buffer))\\s+([\\w\\d_-]+)\\s+(?i:(for(?:\\stemp-table)?))\\s+([\\w\\d_-]+(?:\\.\\w+)*)'
                        'captures':
                            '1':
                                'name': 'keyword.other.oe'
                            '2':
                                'name': 'variable.other.oe'
                            '3':
                                'name': 'keyword.other.oe'
                            '4':
                                'name': 'storage.type.oe'
                    }
                    { #table
                        'match': '\\b(?i:(table\\s+for|table-handle|dataset\\s+for|dataset-handle))\\s+([\\w\\d_-]+)(?i:(\\sappend|\\sbind|\\sby-value)*)'
                        'captures':
                            '1':
                                'name': 'keyword.other.oe'
                            '2':
                                'name': 'variable.other.oe'
                            '3':
                                'name': 'keyword.other.oe'
                    }
                    {
                        'match': '(?<=[^\\w-])(?i:no-undo|init(?:ial)?|not|case-sensitive|format|decimals|column-label|label|preselect)(?=[^\\w-])'
                        'name': 'keyword.other.define.oe'
                    }
                    { 'include': '#strings' }
                    { 'include': '#numbers' }
                    { 'include': '#oeConstants' }
                ]
            }
            { #buffers
                'begin': '^\\s*(?i:def(?:ine)?)(?=[^\\w-].*(?i:buffer))'
                'beginCaptures':
                    '0':
                        'name': 'keyword.other.define.oe'
                'end': '\\.\\s'
                'name': 'meta.define.oe'
                'patterns': [
                    { #format the buffer modifiers
                        'match': '(?i:((?:static\\s+|private\\s+|protected\\s+|new\\s+|shared\\s+)*)(buffer))'
                        'captures':
                            '1':
                                'name': 'storage.modifier.oe'
                            '2':
                                'name': 'keyword.other.oe'
                    }
                    { #format the buffer name and table
                        'match': '\\b([\\w\\d_-]+)\\s+(?i:(for(?:\\s+temp-table)?))\\s+([\\w\\d_-]+)'
                        'captures':
                            '1':
                                'name': 'variable.other.oe'
                            '2':
                                'name': 'keyword.other.oe'
                            '3':
                                'name': 'storage.name.table.oe'
                    }
                    {
                        'match': '\\b(?i:(preselect))'
                        'name': 'keyword.other.oe'
                    }
                    {
                        'match': '\\b(?i:(label|namespace-uri|namespace-prefix|xml-node-name)(\\s+[\\w\\d_-]+)?)'
                        'captures':
                            '1':
                                'name': 'keyword.other.oe'
                            '2':
                                'name': 'variable.other.oe'
                    }
                ]
            }
        ]
    'viewasphrase':
        'patterns': [
            { #common keywords
                'match': '(?<=\\s)(?i:(view-as|list-items|sort|inner-lines|tooltip|size|max-chars|size|by|scrollbar-horizontal|scrollbar-vertical|horizontal|vertical|text|toggle-box))\\s'
                'name': 'keyword.other.oe'
            }
            { # combo-box specific keywords
                'match': '(?<=\\s)(?i:combo-box|simple|drop-down|drop-down-list|list-item-pairs|auto-completion|unique-match)\\s'
                'name': 'keyword.other.oe'
            }
            { # editor specific keywords
                'match': '(?<=\\s)(?i:(editor|size|by|inner-chars|large|buffer-chars|buffer-lines|no-box|no-word-wrap))\\s'
                'name': 'keyword.other.oe'
            }
            { #fill-in specific keywords
                'match': '(?<=\\s)(?i:fill-in|native)\\s'
                'name': 'keyword.other.oe'
            }
            { #radio-set specific keywords
                'match': '(?<=\\s)(?i:radio-set|expand|radio-buttons)\\s'
                'name': 'keyword.other.oe'
            }
            { #selection-list specific keywords
                'match': '(?<=\\s)(?i:selection-list|single|multiple|no-drag)\\s'
                'name': 'keyword.other.oe'
            }
            { #slider specific keywords
                'match': '(?<=\\s)(?i:slider|max-value|no-current-value|large-to-small|tic-marks|none|top|bottom|left|right|both|frequency)\\s'
                'name': 'keyword.other.oe'
            }
        ]
    'varNameAndType':
        'patterns': [
            {
                'match': '\\b([\\w\\d_-]*)\\s+(?i:(as(?:\\sclass)?|like))\\s+([\\w\\d_-]*(?:\\.\\w+)*)(?i:(?:\\s+(extent)(\\s+\\d+)?)?)'
                'captures':
                    '1':
                        'name': 'variable.other.oe'
                    '2':
                        'name': 'keyword.other.oe'
                    '3':
                        'name': 'storage.type.oe'
                    '4':
                        'name': 'keyword.other.oe'
                    '5':
                        'name': 'constant.numeric.oe'
            }
        ]
    'doStatement':
        'patterns': [
            {
                'begin': '(?<=\\s)(?i:do)\\b'
                'end': '[\\.:](?=\\s*$)'
                'name': 'keyword.other.doblock.oe'
                'patterns': [
                    {
                        'include': '#parameterPatterns'
                    }
                ]
            }
        ]
    'ifStatements':
        'patterns': [
            {
                'begin': '\\b(?i:if)\\b'
                'beginCaptures':
                    '0':
                        'name': 'keyword.other.if.oe'
                'end': '\\b(?i:else)\\b'
                'endCaptures':
                    '0':
                        'name': 'keyword.other.else.oe'
                'patterns': [
                    {
                        'include': '#parameterPatterns'
                    }
                    {
                        'match': '\\b(?i:then)\\b'
                        'name': 'keyword.other.then.oe'
                    }
                ]
            }
            {
                'begin': '\\b(?i:if)\\b'
                'beginCaptures':
                    '0':
                        'name': 'keyword.other.if.oe'
                'end': '\\b(?i:then)\\b'
                'endCaptures':
                    '0':
                        'name': 'keyword.other.then.oe'
                'patterns': [
                    {
                        'include': '#parameterPatterns'
                    }
                ]
            }
        ]
    'forStatement':
        'patterns': [
            {
                'begin': '^(?:\\s*\\b)(?i:(for))(?:[^\\w-])'
                'end': '[\\.:]\\s*\$'
                'name': 'keyword.other.for.oe'
                'patterns': [
                    {
                        'include': '#parameterPatterns'
                    }
                    {
                        'match': '\\b(?i:each|first|last)\\s*([\\w-]*)\\b'
                        'captures':
                            '1':
                                'name': 'storage.name.table.oe'
                    }
                    {
                        'match': '\\b([\\w\\d-]+\\.[\\w\\d-]+)\\b'
                        'name': 'storage.name.table.field.oe'
                    }
                ]
            }
        ]
    'modifiers':
        'patterns': [
            {
                'match': '\\b(static|private|public|protected|global|shared|new|final|abstract)\\b'
                'name': 'storage.modifier.oe'
            }
        ]
    'numbers':
        'patterns': [
            {
                'match': '(?<=[^\\w-])\\.?[\\d\\.]*\\d\\b'
                'name': 'constant.numeric.oe'
            }
        ]
    'oeConstants':
        'patterns': [
            {
                'match': '(?<=[^\\w-])(?i:(yes|no|true|false|\\?))(?=[^\\w-])'
                'captures':
                    '1':
                        'name': 'constant.language.oe'
            }
        ]
    'oeFunctions':
        'patterns': [
            {
                'begin': '\\b((?i:(int(eger)?|log(ical)?|string|lookup|entry|chr|trim|substitute|mtime|date|replace|substring|index|num-entries|dec(imal)?))\\()'
                'end': '\\)(?=\\W)'
                'beginCaptures':
                    '1':
                        'name': 'support.function.oe'
                'endCaptures':
                    '0':
                        'name': 'support.function.oe'
                'patterns': [
                    { 'include': '#parameterPatterns' }
                ]
            }
        ]
    'operators':
        'patterns': [
            {
                'match': '(?<=\\s)[+\\*\\/-](?=\\s)'
                'name': 'keyword.operator.math.oe'
            }
            {
                'match': '(([<>=])\\1?|(?:ne|eq|lt|gt))'
                'name': 'keyword.operator.comparison.oe'
            }
        ]
    'parameterPatterns':
        'patterns': [
            { 'include': '#comments' }
            { 'include': '#oeConstants' }
            { 'include': '#numbers' }
            { 'include': '#strings' }
            { 'include': '#preProcVar' }
            { 'include': '#oeFunctions' }
            { 'include': '#ifStatements' }
            { 'include': '#operators' }
            { 'include': '#functionsMethods' }
            { 'include': '#preProcIf'}
            {
                'match': '(?i:input-output|input|output)'
                'name': 'keyword.other.oe'
            }
        ]
    'preProcVar':
        'patterns': [
            {
                'match': '\{&[\\w_\-]+\}'
                'name': 'constant.other.preprocessor.oe'
            }
            {
                'begin': '^\\s*(&(?i:(?:scoped|global)-define))\\s+([\\w\\d-]*)'
                'beginCaptures':
                    '1':
                        'name': 'keyword.other.preprocessordefine.oe'
                    '2':
                        'name': 'constant.other.preprocessor.oe'
                'end': '$'
                'name': 'meta.preprocessor.define.oe'
                'patterns': [
                    { 'include': '#numbers' }
                    { 'include': '#strings' }
                ]
            }
        ]
    'strings':
      'patterns': [
        {
          'begin': '[\']'
          'end': '[\']'
          'name': 'string.quoted.oe'
          'patterns': [
            {
              'match': '\~.'
              'name': 'constant.character.escape.oe'
            }
            {
                'include': '#preProcVar'
            }
          ]
        }
        {
          'begin': '["]'
          'end': '["]'
          'name': 'string.quoted.oe'
          'patterns': [
            {
              'match': '\~.'
              'name': 'constant.character.escape.oe'
            }
            {
                'include': '#preProcVar'
            }
          ]
        }
      ]
    'comments':
        'patterns': [
            {
                'begin': '/\\*'
                'end': '\\*/'
                'name': 'comment.block.oe'
            }
        ]
