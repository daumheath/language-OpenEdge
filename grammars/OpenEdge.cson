'scopeName': 'source.openedge'
'name': 'OpenEdge'
'fileTypes': [
    'p'
    'w'
    'cls'
    'i'
]
'patterns': [
    {
      'include': '#strings'
    }
    {
        'captures':
            '1':
                'name': 'keyword.other.define.oe'
            '2':
                'name': 'variable.other.oe'
        'match': '\\b(?i:(DEF(?:INE)?\\s*(?i:(?:input(?:\\-output)?|output)?\\s*[\\w_\\-\\d]*))\\s*([\\w_\\-]*))'
    }
    {
        'match': '\\b(?i:no-undo)\\b'
        'name': 'keyword.other'
    }
    {
        'begin': '/\\*'
        'end': '\\*/'
        'name': 'comment.block'
    }
    {
        'match': '\{&[\\w_\-]+\}'
        'name': 'string.interpolated.preprocessor.oe'
    }
    {
        'begin': '\{(?!&)'
        'end': '\}'
        'name': 'string.interpolated.include.oe'
    }
    {
        'captures':
            '1':
                'name': 'keyword.other.preprocessor.oe'
            '2':
                'name': 'variable.other.preprocessor.oe'
        'match': '^\\s*&(?i:(analyze-suspend|analyze-resume|scoped-define|global-define))\\s*([\\w_\-]*)'
    }
]
'repository':
    'strings':
      'patterns': [
        {
          'begin': '"'
          'beginCaptures':
            '0': 'punctuation.definition.string.begin.oe'
          'end': '"'
          'endCaptures':
            '0': 'punctuation.definition.string.end.oe'
          'name': 'string.quoted.double.oe'
          'patterns': [
            {
              'match': '\~.'
              'name': 'constant.character.escape.oe'
            }
          ]
        }
        {
          'begin': '\''
          'beginCaptures':
            '1': 'punctuation.definition.string.begin.oe'
          'end': '\''
          'endCaptures':
            '1': 'punctuation.definition.string.end.oe'
          'name': 'string.quoted.single.oe'
          'patterns': [
            {
              'match': '\~.'
              'name': 'constant.character.escape.oe'
            }
          ]
        }
      ]
